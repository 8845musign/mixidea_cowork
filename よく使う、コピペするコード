■■■■■■■■■■■■■ログインしていなかったら、モーダルを出す■■■■■■■■■■■■■


    import { UserauthService} from './../../core/service/userauth.service';


      constructor( private user_auth : UserauthService) { }

    if(!this.user_auth.own_user.loggedIn){
      alert("you need to login to create a game");
      this.user_auth.open_login_modal();
    



private user_auth : UserauthService


■■■■■■■■■■■■■json を　arrayのように、ngForで扱う■■■■■■■■■■■■■


<span *ngFor="let argument of ((written_debate_data | async)?.arg_status | keysInObject)">
  <br>
  {{argument | json}}
</span>



■■■■■■■■■■■■■firebaseからの取得■■■■■■■■■■■■■


■■■■■■■■■■■■■firebaseへのセーブ■■■■■■■■■■■■■


■■■■■■■■Routerで遷移■■■■■■■■■■■■■

import { Router, ActivatedRoute, Params, NavigationExtras } from '@angular/router';


  constructor(private route: ActivatedRoute,
               private router: Router
								) { }

    let navigationExtras: NavigationExtras = {
      queryParams: {
        argument_id: null,
        team_name:"proposition", 
        type: "main"}
    }
    this.router.navigate(['/article/writerecord_opinion',this.evnet_id], navigationExtras);

■データの反映

https://angular.io/docs/ts/latest/api/core/index/ChangeDetectorRef-class.html
http://stackoverflow.com/questions/35386822/changedetectionstrategy-onpush-and-observable-subscribe-in-angular-2
constructor(private change_ref: ChangeDetectorRef)
this.change_ref.detectChanges()
これを用いると、ChangeDetectionStrategy.OnPushを用いた
immutable な環境でも、特定のアクションがきたときに
change detectionを走らせることができ、親には影響せず、子供にだけ影響する。

親にも影響させたい場合にはmarkForCheck()

 this.change_ref.detectChanges();